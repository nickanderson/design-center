body file control
{
      namespace => "cfdc_yumrepo_3_0";
}

bundle common example_runenv
# Default settings for run environment.
# If you wish for the sketch to behave differently, copy the runenv and tweak to taste
{
  vars:
    any::
      "env_vars"     slist =>{ "activated", "test", "verbose", "inform", "debug" };
      "activated"   string => "1";

      "test"        string => "false";
      "verbose"     string => "false";
      "inform"      string => "false";
      "debug"       string => "false";

}

bundle agent manage_metadata(runenv, metadata, given_path, perm_o, perm_g)
# Creates repomd (xml-rpm-metadata) repository
# Updates metadata if any packages are added changed or removed
{
  vars:
      "vars"     slist => { "@(default:$(runenv).env_vars)" };
      "$(vars)" string => "$(default:$(runenv).$(vars))";

    !test::
      "file_prefix" string => "", policy => "free";
      "owner" string => "$(perm_o)";
      "group" string => "$(perm_g)";

    test::
      "file_prefix" string => "/tmp", policy => "free";
      "owner" string => "$(default:env.LOGNAME)", policy => "free";
      "group" string => "$(owner)", policy => "free";

    any::
      "path" string => "$(file_prefix)$(given_path)", policy => "free";

      "class_prefix"
        string => canonify("$(this.bundle)_$(runenv)_$(path)"),
        policy => "free";


  classes:
      "$(vars)" expression => "default:runenv_$(runenv)_$(vars)";

      "_$(this.namespace)_$(this.bundle)_$(vars)" expression => strcmp("1", "$($(vars))");
      "_$(this.namespace)_$(this.bundle)_inform" or => { "inform_mode"};
      "_$(this.namespace)_$(this.bundle)_verbose" or => { "verbose_mode" };
      "_$(this.namespace)_$(this.bundle)_debug" or => { "debug_mode" };

      "$(class_prefix)_exists"
        expression => fileexists("$(path)/repodata/repomd.xml"),
        comment    => "Check if a repo exists yet";
   
  files:
      "$(path)/."
        create       => "true",
        perms        => default:og("$(owner)", "$(group)"),
        depth_search => default:recurse("inf"),
        comment      => "Ensure repository root directory exists with proper permissions";

      # TODO: this only sees new/content change but not removals or file stats!
      # I expected that any change (including mtime would cause a repair)
      "$(path)"
        changes      => default:dc_detect_all_change_using("md5"),
        depth_search => default:recurse("1"),
        classes      => default:dc_generic("$(class_prefix)_detected_change"),
        comment      => "If any changes are detected we need to signal to update the metadata";

  commands:
      "$(default:dc_paths.createrepo)"
        args       => "$(path)",
        contain    => default:dc_setuid_gid_umask("$(owner)", "$(group)", "022"),
        classes    => default:dc_generic("$(class_prefix)_create"),
        ifvarclass => not(canonify("$(class_prefix)_exists")),
        comment    => "Create repository if one does not exist";

      "$(default:dc_paths.createrepo)"
        args       => "--update $(path)",
        contain    => default:dc_setuid_gid_umask("$(owner)", "$(group)", "022"),
        classes    => default:dc_generic("$(class_prefix)_metadata_update"),
        ifvarclass => "$(class_prefix)_detected_change_repaired",
        comment    => "We need to update the metadata since a change was detected";

  reports:
    _cfdc_yumrepo_manage_metadata_verbose::
      "$(this.namespace):$(this.bundle)__ Repository metadata does not exist at $(path)",
        ifvarclass => not(canonify("$(class_prefix)_exists"));

      "$(this.namespace):$(this.bundle)__ Detected changes in $(path)/",
        ifvarclass => "$(class_prefix)_detected_change_repaired";

    _cfdc_yumrepo_manage_metadata_inform::
      "Initalized repository metadata at $(path)",
        ifvarclass => "$(class_prefix)_create_ok";

      "Repository metadata updated at $(path)",
        ifvarclass => "$(class_prefix)_metadata_update_repaired";

    any::
      "Successfully created repository in $(path)"
        bundle_return_value_index => "status",
        ifvarclass => "$(class_prefix)_create_no_ok";

      "Successfully updated repository in $(path)"
        bundle_return_value_index => "status",
        ifvarclass => "$(class_prefix)_metadata_update_ok";

      "Unable to create or update repository in $(path) using $(default:dc_paths.createrepo)"
        bundle_return_value_index => "status",
        ifvarclass => "$(class_prefix)_create_not_ok|$(class_prefix)_metadata_update_not_ok";

      "1"
        bundle_return_value_index => "return_code",
        ifvarclass => "$(class_prefix)_create_not_ok|$(class_prefix)_metadata_update_not_ok";

      "0"
        bundle_return_value_index => "return_code",
        ifvarclass => "$(class_prefix)_create_ok|$(class_prefix)_metadata_update_ok";


}
